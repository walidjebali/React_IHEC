{"ast":null,"code":"const axios = require('axios');\nconst backendurl = 'http://localhost:5000/';\nexport const LatestSearchedUrls = async limit => {\n  try {\n    const response = await axios.get(`${backendUrl}latest-searched-urls/${limit}`);\n    return response; // Assuming the response contains the array of URLs\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\n_c = LatestSearchedUrls;\nexport const summarizeData = async data => {\n  try {\n    const response = await axios.post(`${backendurl}summarize`, data);\n    return response;\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\nexport const roast = async data => {\n  try {\n    const response = await axios.post(`${backendurl}roast`, data);\n    return response;\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"LatestSearchedUrls\");","map":{"version":3,"names":["axios","require","backendurl","LatestSearchedUrls","limit","response","get","backendUrl","error","console","message","_c","summarizeData","data","post","roast","$RefreshReg$"],"sources":["C:/Users/Admin/front/src/Components/req.js"],"sourcesContent":["const axios = require ('axios');\r\nconst backendurl = 'http://localhost:5000/';\r\n\r\nexport const LatestSearchedUrls = async (limit) => {\r\n    try {\r\n        const response = await axios.get(`${backendUrl}latest-searched-urls/${limit}`);\r\n        return response; // Assuming the response contains the array of URLs\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\nexport const summarizeData =async (data)=> {\r\n    try {\r\n        const response = await axios.post(`${backendurl}summarize`,data);\r\n        return response;\r\n    } catch (error){\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const roast = async (data)=> {\r\n    try {\r\n        const response =await axios.post(`${backendurl}roast`,data);\r\n        return response;\r\n    } catch (error){\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAE,OAAO,CAAC;AAC/B,MAAMC,UAAU,GAAG,wBAAwB;AAE3C,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,KAAK,IAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEC,UAAW,wBAAuBH,KAAM,EAAC,CAAC;IAC9E,OAAOC,QAAQ,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAACG,EAAA,GARWR,kBAAkB;AAW/B,OAAO,MAAMS,aAAa,GAAE,MAAOC,IAAI,IAAI;EACvC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAE,GAAEZ,UAAW,WAAU,EAACW,IAAI,CAAC;IAChE,OAAOR,QAAQ;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAC;IACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMO,KAAK,GAAG,MAAOF,IAAI,IAAI;EAChC,IAAI;IACA,MAAMR,QAAQ,GAAE,MAAML,KAAK,CAACc,IAAI,CAAE,GAAEZ,UAAW,OAAM,EAACW,IAAI,CAAC;IAC3D,OAAOR,QAAQ;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAC;IACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAAC,IAAAG,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}