{"ast":null,"code":"import axios from 'axios';\nconst backendUrl = 'http://localhost:3000/';\nexport const LatestSearchedUrls = async limit => {\n  try {\n    const response = await axios.get(`${backendUrl}latest-searched-urls/${limit}`);\n    return response; // Assuming the response contains the array of URLs\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\n_c = LatestSearchedUrls;\nexport const summarizeData = async data => {\n  try {\n    const response = await axios.post(`${backendUrl}summarize`, data);\n    return response;\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\nexport const roast = async data => {\n  try {\n    const response = await axios.post(`${backendUrl}roast`, data);\n    return response;\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\nexport const fetchSummaryFromDatabase = async url => {\n  try {\n    const response = await axios.get(`${backendUrl}summary/${url}`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n    throw error;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"LatestSearchedUrls\");","map":{"version":3,"names":["axios","backendUrl","LatestSearchedUrls","limit","response","get","error","console","message","_c","summarizeData","data","post","roast","fetchSummaryFromDatabase","url","$RefreshReg$"],"sources":["C:/Users/Admin/front/src/Components/req.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst backendUrl = 'http://localhost:3000/';\r\n\r\nexport const LatestSearchedUrls = async (limit) => {\r\n    try {\r\n        const response = await axios.get(`${backendUrl}latest-searched-urls/${limit}`);\r\n        return response; // Assuming the response contains the array of URLs\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const summarizeData = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${backendUrl}summarize`, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const roast = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${backendUrl}roast`, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchSummaryFromDatabase = async (url) => {\r\n    try {\r\n        const response = await axios.get(`${backendUrl}summary/${url}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,wBAAwB;AAE3C,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,KAAK,IAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,UAAW,wBAAuBE,KAAM,EAAC,CAAC;IAC9E,OAAOC,QAAQ,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAACG,EAAA,GARWP,kBAAkB;AAU/B,OAAO,MAAMQ,aAAa,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAI,CAAE,GAAEX,UAAW,WAAU,EAAEU,IAAI,CAAC;IACjE,OAAOP,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMO,KAAK,GAAG,MAAOF,IAAI,IAAK;EACjC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAI,CAAE,GAAEX,UAAW,OAAM,EAAEU,IAAI,CAAC;IAC7D,OAAOP,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMQ,wBAAwB,GAAG,MAAOC,GAAG,IAAK;EACnD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,UAAW,WAAUc,GAAI,EAAC,CAAC;IAC/D,OAAOX,QAAQ,CAACO,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B,MAAMF,KAAK;EACf;AACJ,CAAC;AAAC,IAAAG,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}