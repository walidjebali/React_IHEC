{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\front\\\\src\\\\Components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Skeleton from '@mui/material/Skeleton';\nimport Snackbar from '@mui/material/Snackbar';\nimport { summarizeData, roast } from './req';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [canSendData, setCanSendData] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSummarize = async () => {\n    setIsLoading(true);\n    setIsSubmitting(true);\n    handleSnackbarOpen();\n    const data = {\n      language: language,\n      url: url\n    };\n    const result = await summarizeData(data);\n    setResponse(result.data.message.content);\n    setIsLoading(false);\n    setSnackbarOpen(false);\n    setIsSubmitting(false);\n  };\n  const handleRoast = async () => {\n    setIsLoading(true);\n    setIsSubmitting(true);\n    handleSnackbarOpen();\n    const data = {\n      language: language,\n      url: url\n    };\n    const result = await roast(data);\n    setResponse(result.data.message.content);\n    setIsLoading(false);\n    setSnackbarOpen(false);\n    setIsSubmitting(false);\n  };\n  const handleLanguageChange = event => {\n    setLanguage(event.target.value);\n  };\n  const validateURL = url => {\n    const urlPattern = /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$/;\n    if (urlPattern.test(url)) {\n      setCanSendData(true);\n      setErrorMessage(\"\");\n      setUrl(url);\n    } else {\n      setErrorMessage(\"Please enter a valid URL\");\n      setCanSendData(false);\n    }\n  };\n  const handleSnackbarOpen = () => {\n    setSnackbarOpen(true);\n  };\n  useEffect(() => {\n    // Fetch data from the server when the component mounts\n    const fetchData = async () => {\n      try {\n        const data = {\n          language: language,\n          url: url\n        };\n        const result = await summarizeData(data);\n        setResponse(result.data.message.content);\n        setIsLoading(false);\n        setSnackbarOpen(false);\n        setIsSubmitting(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n        setSnackbarOpen(false);\n        setIsSubmitting(false);\n      }\n    };\n\n    // Call the fetchData function\n    fetchData();\n  }, []); // Empty dependency array ensures the useEffect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"ReMi7FWXWoeNV+XRUvHt8hU6uMg=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Stack","FormControl","FormHelperText","Select","MenuItem","InputLabel","Skeleton","Snackbar","summarizeData","roast","jsxDEV","_jsxDEV","SearchBar","_s","url","setUrl","language","setLanguage","canSendData","setCanSendData","errorMessage","setErrorMessage","response","setResponse","isLoading","setIsLoading","snackbarOpen","setSnackbarOpen","isSubmitting","setIsSubmitting","handleSummarize","handleSnackbarOpen","data","result","message","content","handleRoast","handleLanguageChange","event","target","value","validateURL","urlPattern","test","fetchData","error","console","sx","display","alignItems","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/front/src/Components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport { summarizeData, roast } from './req';\r\n\r\nfunction SearchBar() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"\");\r\n  const [canSendData, setCanSendData] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleSummarize = async () => {\r\n    setIsLoading(true);\r\n    setIsSubmitting(true);\r\n    handleSnackbarOpen();\r\n    const data = { language: language, url: url };\r\n    const result = await summarizeData(data);\r\n    setResponse(result.data.message.content);\r\n    setIsLoading(false);\r\n    setSnackbarOpen(false);\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  const handleRoast = async () => {\r\n    setIsLoading(true);\r\n    setIsSubmitting(true);\r\n    handleSnackbarOpen();\r\n    const data = { language: language, url: url };\r\n    const result = await roast(data);\r\n    setResponse(result.data.message.content);\r\n    setIsLoading(false);\r\n    setSnackbarOpen(false);\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  const handleLanguageChange = (event) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n\r\n  const validateURL = (url) => {\r\n    const urlPattern = /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?$/;\r\n    if (urlPattern.test(url)) {\r\n      setCanSendData(true);\r\n      setErrorMessage(\"\");\r\n      setUrl(url);\r\n    } else {\r\n      setErrorMessage(\"Please enter a valid URL\");\r\n      setCanSendData(false);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarOpen = () => {\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the server when the component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = { language: language, url: url };\r\n        const result = await summarizeData(data);\r\n        setResponse(result.data.message.content);\r\n        setIsLoading(false);\r\n        setSnackbarOpen(false);\r\n        setIsSubmitting(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setIsLoading(false);\r\n        setSnackbarOpen(false);\r\n        setIsSubmitting(false);\r\n      }\r\n    };\r\n\r\n    // Call the fetchData function\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures the useEffect runs only once on mount\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n      }}\r\n    >\r\n      {/* ... rest of the code remains the same */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}